{"version":3,"sources":["components/Header.js","components/Scroll.js","containers/ErrorBoundary.js","containers/App.js","actions.js","constants.js","reducers.js","serviceWorker.js","index.js"],"names":["Header","nextProps","nextState","className","Component","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","errormsg","infomsg","error","info","this","setState","CardList","loadable","SearchBox","StarchFoodButton","ProteinFoodButton","filterFoods","index","foods","searchfield","filteredFoods","length","filter","food","name","toLowerCase","includes","App","starch_index","protein_index","onRequestFoods","srandom","Math","floor","random","starchyFoods","prandom","proteinFoods","onSearchChange","isPending","StarchyFoods","ProteinFoods","searchChange","onClicked","onClickedStarch","bind","onClickedProtein","connect","searchFoods","requestFoods","item","category","dispatch","event","type","payload","target","value","fetch","then","response","json","data","i","url","catch","initialSearchState","initialFoodState","rootReducer","combineReducers","action","Object","assign","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","logger","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c8c59b6d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Header extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return false;\n  }\n\n  render() {\n    return (\n      <div className=\"tc bw3 br-pill fl-w100\">\n        <header className=\"header\">\n          <h1 className=\"f1\">What Do You Want To Eat?</h1>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{ overflowY: \"auto\", border: \"1 px solid black\", height: \"500px\" }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass ErrorBoundary extends Component {\n  constructor() {\n    super();\n    this.state = {\n      hasError: false,\n      errormsg: \"\",\n      infomsg: \"\",\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      hasError: true,\n      errormsg: error,\n      infomsg: info,\n    });\n  }\n\n  render() {\n    const { hasError, errormsg, infomsg } = this.state;\n    if (hasError) {\n      return (\n        <div>\n          <h1>Oops, somthing wrong happens...</h1>\n          <p>The error message is: {errormsg}.</p>\n          <p>The info message is {infomsg}.</p>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from \"react\";\nimport loadable from \"@loadable/component\";\nimport \"./App.css\";\n\nimport Header from \"../components/Header\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundary from \"./ErrorBoundary\";\n\nimport { connect } from \"react-redux\";\nimport { setSearchField, requestFoods } from \"../actions\";\n\nconst CardList = loadable(() => import(\"../components/CardList\"));\nconst SearchBox = loadable(() => import(\"../components/SearchBox\"));\nconst StarchFoodButton = loadable(() =>\n  import(\"../components/StarchFoodButton\")\n);\nconst ProteinFoodButton = loadable(() =>\n  import(\"../components/ProteinFoodButton\")\n);\n\nconst mapStateToProps = (state) => {\n  return {\n    searchfield: state.searchFoods.searchfield,\n    starchyFoods: state.requestFoods.foods.filter(\n      (item) => item.category === \"main food\"\n    ),\n    proteinFoods: state.requestFoods.foods.filter(\n      (item) => item.category !== \"main food\"\n    ),\n    isPending: state.requestFoods.isPending,\n    error: state.requestFoods.error,\n  };\n};\n\nconst filterFoods = (index, foods, searchfield) => {\n  var filteredFoods = [];\n  if (index !== -1 && !searchfield.length) {\n    filteredFoods = [foods[index]];\n  } else if (foods.length > 0) {\n    filteredFoods = foods.filter((food) => {\n      return food.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n  }\n  return filteredFoods;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestFoods: () => dispatch(requestFoods()),\n  };\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      starch_index: -1,\n      protein_index: -1,\n    };\n  }\n\n  componentDidMount() {\n    this.props.onRequestFoods();\n  }\n\n  onClickedStarch() {\n    const srandom = Math.floor(Math.random() * this.props.starchyFoods.length);\n    this.setState({\n      starch_index: srandom,\n      searchfield: \"\",\n    });\n  }\n\n  onClickedProtein() {\n    const prandom = Math.floor(Math.random() * this.props.proteinFoods.length);\n    this.setState({\n      protein_index: prandom,\n      searchfield: \"\",\n    });\n  }\n\n  render() {\n    const { starch_index, protein_index } = this.state;\n    const {\n      starchyFoods,\n      proteinFoods,\n      searchfield,\n      onSearchChange,\n      isPending,\n    } = this.props;\n    var StarchyFoods = filterFoods(starch_index, starchyFoods, searchfield);\n    var ProteinFoods = filterFoods(protein_index, proteinFoods, searchfield);\n\n    return isPending ? (\n      <div className=\"App\">\n        <header className=\"header\">\n          <h1 className=\"f1\">Loading...</h1>\n        </header>\n      </div>\n    ) : (\n      <div className=\"App\">\n        <Header />\n        <div className=\"row\">\n          <SearchBox searchChange={onSearchChange} />\n\n          <div className=\"column\">\n            <StarchFoodButton onClicked={this.onClickedStarch.bind(this)} />\n            <Scroll>\n              <ErrorBoundary>\n                <CardList foods={StarchyFoods} />\n              </ErrorBoundary>\n            </Scroll>\n          </div>\n\n          <div className=\"column\">\n            <ProteinFoodButton onClicked={this.onClickedProtein.bind(this)} />\n            <Scroll>\n              <ErrorBoundary>\n                <CardList foods={ProteinFoods} />\n              </ErrorBoundary>\n            </Scroll>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_FOODS_PENDING,\n  REQUEST_FOODS_SUCCESS,\n  REQUEST_FOODS_FAILED,\n} from \"./constants\";\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text,\n});\n\nexport const requestFoods = () => (dispatch) => {\n  dispatch({ type: REQUEST_FOODS_PENDING });\n  fetch(\n    \"https://my-json-server.typicode.com/haochunchang/food-json-server/posts\"\n  )\n    .then((response) => response.json())\n    .then((data) => {\n      for (var i = 0; i < data.length; i++) {\n        var name = data[i].name.toLowerCase();\n        data[\n          i\n        ].url = `https://github.com/haochunchang/food-json-server/blob/master/images/${name}.jpg?raw=true`;\n      }\n      dispatch({ type: REQUEST_FOODS_SUCCESS, payload: data });\n    })\n    .catch((error) => dispatch({ type: REQUEST_FOODS_FAILED, payload: error }));\n};\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\n\nexport const REQUEST_FOODS_PENDING = \"REQUEST_FOODS_PENDING\";\nexport const REQUEST_FOODS_SUCCESS = \"REQUEST_FOODS_SUCCESS\";\nexport const REQUEST_FOODS_FAILED = \"REQUEST_FOODS_FAILED\";\n","import { combineReducers } from \"redux\";\nimport {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_FOODS_PENDING,\n  REQUEST_FOODS_SUCCESS,\n  REQUEST_FOODS_FAILED,\n} from \"./constants\";\n\n// Many Reducers below\n//\n//\nconst initialSearchState = {\n  searchfield: \"\",\n};\n\nexport const searchFoods = (state = initialSearchState, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, { searchfield: action.payload });\n    default:\n      return state;\n  }\n};\n\nconst initialFoodState = {\n  isPending: false,\n  foods: [],\n  error: \"\",\n};\n\nexport const requestFoods = (state = initialFoodState, action = {}) => {\n  switch (action.type) {\n    case REQUEST_FOODS_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_FOODS_SUCCESS:\n      return Object.assign({}, state, {\n        foods: action.payload,\n        isPending: false,\n      });\n    case REQUEST_FOODS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false,\n      });\n    default:\n      return state;\n  }\n};\n\nexport const rootReducer = combineReducers({\n  searchFoods,\n  requestFoods,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./wdyr\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport \"./index.css\";\n\nimport App from \"./containers/App\";\nimport { rootReducer } from \"./reducers\";\nimport \"tachyons\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst logger = createLogger();\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, logger)\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}