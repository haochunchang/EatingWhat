{"version":3,"sources":["components/Button.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/ErrorBoundary.js","containers/App.js","serviceWorker.js","index.js","logo.svg"],"names":["Button","index","onClicked","type","onClick","className","Card","props","id","name","category","alt","src","CardList","foods","cardComponent","map","food","i","key","SearchBox","searchfield","searchChange","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","errormsg","infomsg","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","posts","random","Math","floor","length","filteredFoods","filter","toLowerCase","includes","logo","bind","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.073a91b7.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\n\nconst Button = ({ index, onClicked }) => {\n  return (\n    <Fragment>\n        <button\n            type=\"button\"\n            onClick={onClicked}\n            className=\"f3 pa3 btn btn-sucess grow\">No Idea? Click Me!\n        </button>\n    </Fragment>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\nconst Card = (props) => {\n  const { id, name, category } = props;\n  return (\n    <div className=\"tc bg-light-green dib br5 pa3 ma3 grow bw2 shadow\">\n      <img\n        alt=\"robot\"\n        src={`https://robohash.org/${name}${id}?200x200?set=set4`}\n      />\n      <div>\n        <p>{name}</p>\n        <p>{category}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { Fragment } from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ foods }) => {\n  const cardComponent = foods.map((food, i) => {\n    return (\n      <Card\n        key={i}\n        id={foods[i].id}\n        name={foods[i].name}\n        category={foods[i].category}\n      />\n    );\n  });\n  return <Fragment>{cardComponent}</Fragment>;\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className=\"tc pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search foods\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{ overflowY: \"auto\", border: \"1 px solid black\", height: \"500px\" }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass ErrorBoundary extends Component {\n  constructor() {\n    super();\n    this.state = {\n        hasError: false,\n        errormsg: \"\",\n        infomsg: \"\"\n    };\n  }\n\n  componentDidCatch(error, info) {\n      this.setState({ \n          hasError: true,\n          errormsg: error,\n          infomsg: info\n      });\n  }\n\n  render() {\n      const { hasError, errormsg, infomsg } = this.state;\n      if (hasError) {\n          return (\n              <div>\n                <h1>Oops, somthing wrong happens...</h1>\n                <p>The error message is: {errormsg}.</p>\n                <p>The info message is {infomsg}.</p>\n              </div>\n          );\n      }\n      return this.props.children\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from \"react\";\nimport logo from \"../logo.svg\";\nimport \"./App.css\";\nimport Button from \"../components/Button\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundary from \"./ErrorBoundary\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      foods: [],\n      searchfield: \"\",\n      index: -1\n    };\n  }\n\n  componentDidMount() {\n    fetch(\n      \"https://my-json-server.typicode.com/haochunchang/food-json-server/posts\"\n    )\n      .then((response) => response.json())\n      .then((posts) => this.setState({ foods: posts }));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n  };\n\n  onClicked() {\n    const random = Math.floor(Math.random() * this.state.foods.length);\n    this.setState({ index: random, searchfield: \"\" });\n  };\n\n  render() {\n    const { foods, searchfield, index } = this.state;\n    var filteredFoods = [];\n    if (index !== -1 && !searchfield.length) {\n        filteredFoods = [foods[index]];\n    } else {\n        filteredFoods = foods.filter((food) => {\n          return food.name.toLowerCase().includes(searchfield.toLowerCase());\n        });\n    }\n    return !foods.length ? (\n      <div className=\"App\">\n        <header className=\"header\">\n          <h1 className=\"f1\">Loading...</h1>\n        </header>\n      </div>\n    ) : (\n      <div className=\"App\">\n        <header className=\"header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"f1\">What Do You Want To Eat?</h1>\n        </header>\n        <div className=\"tc\">\n          <SearchBox searchChange={this.onSearchChange} />\n          <Button onClicked={this.onClicked.bind(this)} />\n          <Scroll>\n            <ErrorBoundary>\n              <CardList foods={filteredFoods} />\n            </ErrorBoundary>\n          </Scroll>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./containers/App\";\nimport \"tachyons\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}